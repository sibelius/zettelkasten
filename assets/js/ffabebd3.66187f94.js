"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[1065],{5264:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=n(5893),o=n(1151);const i={id:"testing-concept-fronted",title:"Testing Concept Frontend",tags:["testing","concept","frontend"]},a=void 0,r={id:"testing-concept-fronted",title:"Testing Concept Frontend",description:"You first need to undestand the concept of frontend tests.",source:"@site/docs/testing-concept-frontend.md",sourceDirName:".",slug:"/testing-concept-fronted",permalink:"/zettelkasten/testing-concept-fronted",draft:!1,unlisted:!1,editUrl:"https://github.com/sibelius/zettelkasten/edit/main/docs/testing-concept-frontend.md",tags:[{label:"testing",permalink:"/zettelkasten/tags/testing"},{label:"concept",permalink:"/zettelkasten/tags/concept"},{label:"frontend",permalink:"/zettelkasten/tags/frontend"}],version:"current",lastUpdatedBy:"Sibelius Seraphini",lastUpdatedAt:1708985533,formattedLastUpdatedAt:"Feb 26, 2024",frontMatter:{id:"testing-concept-fronted",title:"Testing Concept Frontend",tags:["testing","concept","frontend"]},sidebar:"docs",previous:{title:"Talks",permalink:"/zettelkasten/talks"},next:{title:"updates",permalink:"/zettelkasten/category/updates"}},d={},c=[];function l(t){const e={code:"code",p:"p",pre:"pre",...(0,o.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"You first need to undestand the concept of frontend tests."}),"\n",(0,s.jsx)(e.p,{children:"You should not test the implementation but the behavior"}),"\n",(0,s.jsx)(e.p,{children:"You test like the end user"}),"\n",(0,s.jsx)(e.p,{children:"For instance, imagine a login screen with email and password inputs and a submit button"}),"\n",(0,s.jsx)(e.p,{children:"The test should input the email and the password, then click in the submit button."}),"\n",(0,s.jsx)(e.p,{children:"You should assert the API was called with the inputted data."}),"\n",(0,s.jsx)(e.p,{children:"When using testing library you test against DOM"}),"\n",(0,s.jsx)(e.p,{children:"code:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-jsx",children:"const emailInput = getByTestId(emailTestId);\nfireEvent.onChange(emailInput, { target: { value: 'email@email.com.br' }})\n\nconst passwordInput = getByTestId(passwordTestId);\nfireEvent.onChange(passwordInput, { target: { value: 'pwd' }})\n\nconst submitButton = getByText('Login').closest('button');\nfireEvent.click(submitButton);\n\n// assert api was called properly\n"})})]})}function p(t={}){const{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},1151:(t,e,n)=>{n.d(e,{a:()=>a});var s=n(7294);const o={},i=s.createContext(o);function a(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}}}]);